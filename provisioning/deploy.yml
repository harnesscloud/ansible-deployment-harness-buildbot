---
- hosts: all
  sudo: True
  roles:
    - chrony


- hosts: slaves
  sudo: True
  roles:
    - docker


- hosts: master
  sudo: True
  tasks:

    - name: ensure that buildbot master packages are installed
      apt:
        pkg: "{{ item }}"
        state: latest
        update_cache: yes
        cache_valid_time: 600
      with_items:
        - buildbot

    - name: ensure that each buildmaster process has a subdirectory
      file:
        path: /var/lib/buildbot/masters/{{ item }}
        owner: buildbot
        group: buildbot
        mode: 0700
        state: directory
      with_sequence: start=1 end={{ buildbot_master_process_count }}

    - name: ensure that each buildmaster subdirectory has been initialized
      sudo_user: buildbot
      command: buildbot create-master masters/{{ item }}
      args:
        chdir: /var/lib/buildbot
        creates: /var/lib/buildbot/masters/{{ item }}/buildbot.tac
      with_sequence: start=1 end={{ buildbot_master_process_count }}

    - name: ensure that buildmasters are enabled in /etc/default/buildmaster
      lineinfile:
        dest: /etc/default/buildmaster
        regexp: ^#?MASTER_ENABLED\[{{ item }}\]=
        line: MASTER_ENABLED[{{ item }}]=1
        state: present
      with_sequence: start=1 end={{ buildbot_master_process_count }}

    - name: ensure that buildmaster names are configured in /etc/default/buildmaster
      lineinfile:
        dest: /etc/default/buildmaster
        regexp: ^#?MASTER_NAME\[{{ item }}\]=
        line: 'MASTER_NAME[{{ item }}]="buildmaster {{ inventory_hostname }} #{{ item }}"'
        state: present
      with_sequence: start=1 end={{ buildbot_master_process_count }}

    - name: ensure that buildmaster users are configured in /etc/default/buildmaster
      lineinfile:
        dest: /etc/default/buildmaster
        regexp: ^#?MASTER_USER\[{{ item }}\]=
        line: 'MASTER_USER[{{ item }}]="buildbot"'
        state: present
      with_sequence: start=1 end={{ buildbot_master_process_count }}

    - name: ensure that buildmaster basedirs are configured in /etc/default/buildmaster
      lineinfile:
        dest: /etc/default/buildmaster
        regexp: ^#?MASTER_BASEDIR\[{{ item }}\]=
        line: 'MASTER_BASEDIR[{{ item }}]="/var/lib/buildbot/masters/{{ item }}"'
        state: present
      with_sequence: start=1 end={{ buildbot_master_process_count }}

    - name: ensure that buildmaster options are configured in /etc/default/buildmaster
      lineinfile:
        dest: /etc/default/buildmaster
        regexp: ^#?MASTER_OPTIONS\[{{ item }}\]=
        line: 'MASTER_OPTIONS[{{ item }}]=""'
        state: present
      with_sequence: start=1 end={{ buildbot_master_process_count }}

    - name: ensure that buildmaster options are configured in /etc/default/buildmaster
      lineinfile:
        dest: /etc/default/buildmaster
        regexp: ^#?MASTER_PREFIXCMD\[{{ item }}\]=
        line: 'MASTER_PREFIXCMD[{{ item }}]=""'
        state: present
      with_sequence: start=1 end={{ buildbot_master_process_count }}

    - name: ensure that buildbot master services are started and enabled
      service:
        name: "{{ item }}"
        enabled: yes
        state: started
      with_items:
        - buildmaster


- hosts: slaves
  sudo: True
  tasks:

    - name: ensure that buildbot slave packages are installed
      apt:
        pkg: "{{ item }}"
        state: latest
        update_cache: yes
        cache_valid_time: 600
      with_items:
        - buildbot-slave

    - name: ensure that each buildslave process has a subdirectory
      file:
        path: /var/lib/buildbot/slaves/{{ item }}
        owner: buildbot
        group: buildbot
        mode: 0700
        state: directory
      with_sequence: start=1 end={{ buildbot_slave_process_count }}

    - name: ensure that each buildslave subdirectory has been initialized
      sudo_user: buildbot
      command: buildslave create-slave slaves/{{ item }} {{ buildbot_master_ip }}:9989 slave-{{ inventory_hostname }}-{{ item }} customperslavepassword
      args:
        chdir: /var/lib/buildbot
        creates: /var/lib/buildbot/slaves/{{ item }}/buildbot.tac
      with_sequence: start=1 end={{ buildbot_slave_process_count }}

    - name: ensure that buildslave is enabled in /etc/default/buildslave
      lineinfile:
        dest: /etc/default/buildslave
        regexp: ^#?SLAVE_ENABLED\[{{ item }}\]=
        line: SLAVE_ENABLED[{{ item }}]=1
        state: present
      with_sequence: start=1 end={{ buildbot_slave_process_count }}

    - name: ensure that buildslave names are configured in /etc/default/buildslave
      lineinfile:
        dest: /etc/default/buildslave
        regexp: ^#?SLAVE_NAME\[{{ item }}\]=
        line: 'SLAVE_NAME[{{ item }}]="buildslave {{ inventory_hostname }} #{{ item }}"'
        state: present
      with_sequence: start=1 end={{ buildbot_slave_process_count }}

    - name: ensure that buildslave users are configured in /etc/default/buildslave
      lineinfile:
        dest: /etc/default/buildslave
        regexp: ^#?SLAVE_USER\[{{ item }}\]=
        line: 'SLAVE_USER[{{ item }}]="buildbot"'
        state: present
      with_sequence: start=1 end={{ buildbot_slave_process_count }}

    - name: ensure that buildslave basedirs are configured in /etc/default/buildslave
      lineinfile:
        dest: /etc/default/buildslave
        regexp: ^#?SLAVE_BASEDIR\[{{ item }}\]=
        line: 'SLAVE_BASEDIR[{{ item }}]="/var/lib/buildbot/slaves/{{ item }}"'
        state: present
      with_sequence: start=1 end={{ buildbot_slave_process_count }}

    - name: ensure that buildslave options are configured in /etc/default/buildslave
      lineinfile:
        dest: /etc/default/buildslave
        regexp: ^#?slave_OPTIONS\[{{ item }}\]=
        line: 'slave_OPTIONS[{{ item }}]=""'
        state: present
      with_sequence: start=1 end={{ buildbot_slave_process_count }}

    - name: ensure that buildslave options are configured in /etc/default/buildslave
      lineinfile:
        dest: /etc/default/buildslave
        regexp: ^#?slave_PREFIXCMD\[{{ item }}\]=
        line: 'slave_PREFIXCMD[{{ item }}]=""'
        state: present
      with_sequence: start=1 end={{ buildbot_slave_process_count }}

    - name: ensure that buildbot slave services are started and enabled
      service:
        name: "{{ item }}"
        enabled: yes
        state: started
      with_items:
        - buildslave


#- hosts: all
#  sudo: True
#  tasks:
#
#    - name: ensure that pip is installed
#      apt:
#        pkg: "{{ item }}"
#        state: latest
#        update_cache: yes
#        cache_valid_time: 600
#      with_items:
#        - python-dev
#        - python-pip
#
#    - name: ensure that buildbot is installed
#      pip:
#        name: "{{ item.name }}"
#        state: latest
#      when: inventory_hostname in groups['{{ item.group }}']
#      with_items:
#        - { name: buildbot, group: master }
#        - { name: buildbot-slave, group: slaves }
#
