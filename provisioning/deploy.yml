---
- hosts: all
  sudo: True
  roles:
    - chrony
    - docker


- hosts: all
  sudo: True
  tasks:

    - name: ensure that buildbot dependency packages are installed
      apt:
        pkg: "{{ item }}"
        state: latest
        update_cache: yes
        cache_valid_time: 600
      with_items:
        - git
        - python-dev
        - python-pip 

    - name: ensure that buildbot is installed
      pip:
        name: "{{ item }}"
        state: latest
      with_items:
        - buildbot

    - name: ensure that buildbot group exists
      group:
        name: buildbot
        state: present

    - name: ensure that buildbot user exits
      user:
        name: buildbot
        group: buildbot
        home: /srv/buildbot
        createhome: yes
        state: present


- hosts: master
  sudo: True
  tasks:

    - name: update /etc/init.d/buildmaster for each master if necessary
      copy:
        src: files/etc/init.d/buildmaster
        dest: /etc/init.d/buildmaster
        owner: root
        group: root
        mode: 0755
      notify:
        - restart buildbot master services

    - name: ensure that each buildmaster process has a subdirectory
      file:
        path: /srv/buildbot/masters/{{ item }}
        owner: buildbot
        group: buildbot
        mode: 0700
        state: directory
      with_sequence: start=1 end={{ buildbot_master_process_count }}

    - name: ensure that each buildmaster subdirectory has been initialized
      sudo_user: buildbot
      command: buildbot create-master masters/{{ item }}
      args:
        chdir: /srv/buildbot
        creates: /srv/buildbot/masters/{{ item }}/buildbot.tac
      with_sequence: start=1 end={{ buildbot_master_process_count }}

    - name: update master.cfg for each master from template if necessary
      template:
        src: templates/srv/buildbot/masters/master.cfg
        dest: /srv/buildbot/masters/{{ item }}/master.cfg
        owner: buildbot
        group: buildbot
        mode: 0600
      with_sequence: start=1 end={{ buildbot_master_process_count }}
      notify:
        - restart buildbot master services

    - name: ensure that buildmasters are enabled in /etc/default/buildmaster
      lineinfile:
        dest: /etc/default/buildmaster
        regexp: ^#?MASTER_ENABLED\[{{ item }}\]=
        line: MASTER_ENABLED[{{ item }}]=1
        state: present
        create: yes
        owner: root
        group: root
        mode: 0644
      with_sequence: start=1 end={{ buildbot_master_process_count }}
      notify:
        - restart buildbot master services

    - name: ensure that buildmaster names are configured in /etc/default/buildmaster
      lineinfile:
        dest: /etc/default/buildmaster
        regexp: ^#?MASTER_NAME\[{{ item }}\]=
        line: 'MASTER_NAME[{{ item }}]="buildmaster {{ inventory_hostname_short }} #{{ item }}"'
        state: present
      with_sequence: start=1 end={{ buildbot_master_process_count }}
      notify:
        - restart buildbot master services

    - name: ensure that buildmaster users are configured in /etc/default/buildmaster
      lineinfile:
        dest: /etc/default/buildmaster
        regexp: ^#?MASTER_USER\[{{ item }}\]=
        line: 'MASTER_USER[{{ item }}]="buildbot"'
        state: present
      with_sequence: start=1 end={{ buildbot_master_process_count }}
      notify:
        - restart buildbot master services

    - name: ensure that buildmaster basedirs are configured in /etc/default/buildmaster
      lineinfile:
        dest: /etc/default/buildmaster
        regexp: ^#?MASTER_BASEDIR\[{{ item }}\]=
        line: 'MASTER_BASEDIR[{{ item }}]="/srv/buildbot/masters/{{ item }}"'
        state: present
      with_sequence: start=1 end={{ buildbot_master_process_count }}
      notify:
        - restart buildbot master services

    - name: ensure that buildmaster options are configured in /etc/default/buildmaster
      lineinfile:
        dest: /etc/default/buildmaster
        regexp: ^#?MASTER_OPTIONS\[{{ item }}\]=
        line: 'MASTER_OPTIONS[{{ item }}]=""'
        state: present
      with_sequence: start=1 end={{ buildbot_master_process_count }}
      notify:
        - restart buildbot master services

    - name: ensure that buildmaster options are configured in /etc/default/buildmaster
      lineinfile:
        dest: /etc/default/buildmaster
        regexp: ^#?MASTER_PREFIXCMD\[{{ item }}\]=
        line: 'MASTER_PREFIXCMD[{{ item }}]=""'
        state: present
      with_sequence: start=1 end={{ buildbot_master_process_count }}
      notify:
        - restart buildbot master services

    - name: ensure that buildbot master services are started and enabled
      service:
        name: "{{ item }}"
        pattern: twistd.run()
        enabled: yes
        state: started
      with_items:
        - buildmaster

  handlers:

    - name: restart buildbot master services
      service:
        name: "{{ item }}"
        state: restarted
      with_items:
        - buildmaster
 

- hosts: slaves
  sudo: True
  tasks:

    - name: update /etc/init.d/buildslave for each slave if necessary
      copy:
        src: files/etc/init.d/buildslave
        dest: /etc/init.d/buildslave
        owner: root
        group: root
        mode: 0755
      notify:
        - restart buildbot slave services

    - name: ensure that each buildslave process has a subdirectory
      file:
        path: /srv/buildbot/slaves/{{ item }}
        owner: buildbot
        group: buildbot
        mode: 0700
        state: directory
      with_sequence: start=1 end={{ buildbot_slave_process_count }}

    - name: ensure that each buildslave subdirectory has been initialized
      sudo_user: buildbot
      command: |
        buildslave create-slave slaves/{{ item }} {{ buildbot_master_ip }}:9989 
          slave-{{ inventory_hostname_short }}-{{ item }} 
          {{ lookup('password', buildbot_run_dir + 
                                '/private/credentials/buildslave-password-' +
                                inventory_hostname_short + '-' + item + 
                                ' length=20 chars=ascii_letters,digits') }}
      args:
        chdir: /srv/buildbot
        creates: /srv/buildbot/slaves/{{ item }}/buildbot.tac
      with_sequence: start=1 end={{ buildbot_slave_process_count }}

    - name: update admin for each master from template if necessary
      template:
        src: templates/srv/buildbot/slaves/admin
        dest: /srv/buildbot/admin/{{ item }}/admin
        owner: buildbot
        group: buildbot
        mode: 0644
      with_sequence: start=1 end={{ buildbot_master_process_count }}
      notify:
        - restart buildbot slave services

    - name: update info for each master from template if necessary
      template:
        src: templates/srv/buildbot/slaves/info
        dest: /srv/buildbot/info/{{ item }}/info
        owner: buildbot
        group: buildbot
        mode: 0644
      with_sequence: start=1 end={{ buildbot_master_process_count }}
      notify:
        - restart buildbot slave services

    - name: ensure that buildslave is enabled in /etc/default/buildslave
      lineinfile:
        dest: /etc/default/buildslave
        regexp: ^#?SLAVE_ENABLED\[{{ item }}\]=
        line: SLAVE_ENABLED[{{ item }}]=1
        state: present
        create: yes
        owner: root
        group: root
        mode: 0644
      with_sequence: start=1 end={{ buildbot_slave_process_count }}

    - name: ensure that buildslave names are configured in /etc/default/buildslave
      lineinfile:
        dest: /etc/default/buildslave
        regexp: ^#?SLAVE_NAME\[{{ item }}\]=
        line: 'SLAVE_NAME[{{ item }}]="buildslave {{ inventory_hostname_short }} #{{ item }}"'
        state: present
      with_sequence: start=1 end={{ buildbot_slave_process_count }}

    - name: ensure that buildslave users are configured in /etc/default/buildslave
      lineinfile:
        dest: /etc/default/buildslave
        regexp: ^#?SLAVE_USER\[{{ item }}\]=
        line: 'SLAVE_USER[{{ item }}]="buildbot"'
        state: present
      with_sequence: start=1 end={{ buildbot_slave_process_count }}

    - name: ensure that buildslave basedirs are configured in /etc/default/buildslave
      lineinfile:
        dest: /etc/default/buildslave
        regexp: ^#?SLAVE_BASEDIR\[{{ item }}\]=
        line: 'SLAVE_BASEDIR[{{ item }}]="/srv/buildbot/slaves/{{ item }}"'
        state: present
      with_sequence: start=1 end={{ buildbot_slave_process_count }}

    - name: ensure that buildslave options are configured in /etc/default/buildslave
      lineinfile:
        dest: /etc/default/buildslave
        regexp: ^#?SLAVE_OPTIONS\[{{ item }}\]=
        line: 'SLAVE_OPTIONS[{{ item }}]=""'
        state: present
      with_sequence: start=1 end={{ buildbot_slave_process_count }}

    - name: ensure that buildslave options are configured in /etc/default/buildslave
      lineinfile:
        dest: /etc/default/buildslave
        regexp: ^#?SLAVE_PREFIXCMD\[{{ item }}\]=
        line: 'SLAVE_PREFIXCMD[{{ item }}]=""'
        state: present
      with_sequence: start=1 end={{ buildbot_slave_process_count }}

    - name: ensure that buildbot slave services are started and enabled
      service:
        name: "{{ item }}"
        pattern: "{{ item }}"
        enabled: yes
        state: started
      with_items:
        - buildslave
  handlers:

    - name: restart buildbot slave services
      service:
        name: "{{ item }}"
        state: restarted
      with_items:
        - buildslave
 
